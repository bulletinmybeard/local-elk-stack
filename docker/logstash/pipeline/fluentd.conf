input {
  gelf {
    port => 12201
    type => "gelf"
  }
}

filter {
    mutate {
        # Use the `tag` to create indexes by app/service
        add_field => { "elastic_index_name" => "%{tag}" }
        add_field => { "service" => "%{tag}" }
    }
    # Skip logs for static files
    if [request] =~ /\.(js|css|woff|woff2|ttf|eot|svg|png|jpg|jpeg|gif|ico)$/ {
        drop { }
    }
    # Parse the request message and create custom fields with the request information
    grok {
        match => {
            "message" => "%{IP:client_ip} - - \[%{HTTPDATE:timestamp}\] \"%{WORD:request_method} %{URIPATH:request_path} HTTP/%{NUMBER:http_version}\" %{NUMBER:response_status} %{NUMBER:response_size} \"%{URI:full_url}\" \"%{DATA:user_agent}\""
        }
    }
    # Check if response_status is not in the 200-299 range and add `http_error` tags
    if [response_status] and [response_status] !~ /^2\d\d$/ {
        mutate {
            add_tag => ["http_error_%{response_status}"]
        }
    }
}

output {
    elasticsearch {
        hosts => ["elasticsearch:9200"]
        index => "%{elastic_index_name}"
        timeout => 15
    }
    stdout {
        codec => rubydebug
    }
}
